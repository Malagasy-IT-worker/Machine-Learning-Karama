services:
  api_prod:
    image: ankoayfeno/api_ml_karama:latest
    profiles:
      - prod
    volumes:
      - ./logs.log:/app/logs.log
    restart: unless-stopped
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-prod.entrypoints=http"
      - "traefik.http.routers.api-prod.rule=Host(`api-karama.brocoding.icu`)"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.api-prod.middlewares=redirect-to-https"
      - "traefik.http.routers.api-prod-secure.entrypoints=https"
      - "traefik.http.routers.api-prod-secure.rule=Host(`api-karama.brocoding.icu`)"
      - "traefik.http.routers.api-prod-secure.tls=true"
      - "traefik.http.routers.api-prod-secure.tls.certresolver=http"
      - "traefik.http.services.api-prod.loadbalancer.server.port=8080"

  api_dev:
    profiles:
      - dev
    image: ankoayfeno/api_ml_karama:latest
    volumes:
      - ./logs.log:/app/logs.log
    restart: unless-stopped
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-dev.entrypoints=http"
      - "traefik.http.routers.api-dev.rule=Host(`dev-api-karama.brocoding.icu`)"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.api-dev.middlewares=redirect-to-https"
      - "traefik.http.routers.api-dev-secure.entrypoints=https"
      - "traefik.http.routers.api-dev-secure.rule=Host(`dev-api-karama.brocoding.icu`)"
      - "traefik.http.routers.api-dev-secure.tls=true"
      - "traefik.http.routers.api-dev-secure.tls.certresolver=http"
      - "traefik.http.services.api-dev.loadbalancer.server.port=8080"

  front_prod:
    image: ankoayfeno/ml_karama:latest
    profiles:
      - prod
    restart: unless-stopped
    environment:
      - NEXT_PUBLIC_API_URL=https://api-karama.brocoding.icu
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-prod.entrypoints=http"
      - "traefik.http.routers.api-prod.rule=Host(`karama.brocoding.icu`)"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.api-prod.middlewares=redirect-to-https"
      - "traefik.http.routers.api-prod-secure.entrypoints=https"
      - "traefik.http.routers.api-prod-secure.rule=Host(`karama.brocoding.icu`)"
      - "traefik.http.routers.api-prod-secure.tls=true"
      - "traefik.http.routers.api-prod-secure.tls.certresolver=http"
      - "traefik.http.services.api-prod.loadbalancer.server.port=3000"

  front_dev:
    image: ankoayfeno/ml_karama:latest
    profiles:
      - dev
    restart: unless-stopped
    environment:
      - NEXT_PUBLIC_API_URL=https://dev-api-karama.brocoding.icu
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-prod.entrypoints=http"
      - "traefik.http.routers.api-prod.rule=Host(`dev-karama.brocoding.icu`)"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.api-prod.middlewares=redirect-to-https"
      - "traefik.http.routers.api-prod-secure.entrypoints=https"
      - "traefik.http.routers.api-prod-secure.rule=Host(`dev-karama.brocoding.icu`)"
      - "traefik.http.routers.api-prod-secure.tls=true"
      - "traefik.http.routers.api-prod-secure.tls.certresolver=http"
      - "traefik.http.services.api-prod.loadbalancer.server.port=3000"

  api_local:
    profiles:
      - local
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./logs.log:/app/logs.log

  front_local:
    profiles:
      - local
    environment:
      - NEXT_PUBLIC_API_URL=https://dev-api-karama.brocoding.icu
    build:
      context: frontend
      dockerfile: Dockerfile
      target: local
    ports:
      - "3000:3000"

networks:
  proxy:
    external: true
