name: Build Docker Images
run-name: Build Docker Images pipeline triggered by ${{ github.actor }} on branch ${{ github.ref }}.

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  docker-build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - directory: .
            repo: "ankoayfeno/api_ml_karama"
          - directory: frontend
            repo: "ankoayfeno/ml_karama"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ vars.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers and dependencies
        uses: actions/cache@v3
        with:
          path: |
            /tmp/.buildx-cache
            /tmp/.pip-cache
          key: docker-cache-${{ runner.os }}-${{ matrix.directory }}-${{ hashFiles('**/Dockerfile', '${{ matrix.directory }}/**', '${{ matrix.directory }}/requirements.txt') }}
          restore-keys: |
            docker-cache-${{ runner.os }}-${{ matrix.directory }}-
            docker-cache-${{ runner.os }}-

      - name: Generate build tag
        id: tag
        run: echo "HEX_TAG=$(date +%Y%m%d%H%M%S)-$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build and test
        uses: docker/build-push-action@v6
        with:
          load: true
          context: ${{ matrix.directory }}
          file: ${{ matrix.directory }}/Dockerfile
          tags: |
            ${{ matrix.repo }}:${{ env.HEX_TAG }}
            ${{ matrix.repo }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max
          build-args: |
            PIP_CACHE_DIR=/tmp/.pip-cache
          target: prod
      - name: Run container tests
        run: |
          docker run --rm ${{ matrix.repo }}:${{ env.HEX_TAG }} pytest tests/
          docker run --rm ${{ matrix.repo }}:latest curl --fail http://localhost:8080/health

      - name: Push to Docker Hub
        uses: docker/build-push-action@v6
        with:
          push: true
          context: ${{ matrix.directory }}
          file: ${{ matrix.directory }}/Dockerfile
          tags: |
            ${{ matrix.repo }}:${{ env.HEX_TAG }}
            ${{ matrix.repo }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          target: prod
