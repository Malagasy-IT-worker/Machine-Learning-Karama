name: Build Docker Images
run-name: Build Docker Images pipeline triggered by ${{ github.actor }} on branch ${{ github.ref }}

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  generate-tag:
    runs-on: ubuntu-latest
    outputs:
      hex_tag: ${{ steps.generate.outputs.hex_tag }}
    steps:
      - name: Generate build tag
        id: generate
        run: echo "::set-output name=hex_tag::$(date +%Y%m%d%H%M%S)-$(git rev-parse --short HEAD)"

  build-and-push-api:
    runs-on: ubuntu-latest
    needs: generate-tag
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ vars.DOCKERHUB_TOKEN }}

      - name: Set up Docker tools
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers for API
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache-api
          key: api-cache-${{ runner.os }}-${{ hashFiles('api/Dockerfile', 'api/requirements.txt') }}

      - name: Build and push API image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ankoayfeno/api_ml_karama:${{ needs.generate-tag.outputs.hex_tag }}
            ankoayfeno/api_ml_karama:latest
          cache-from: type=local,src=/tmp/.buildx-cache-api
          cache-to: type=local,dest=/tmp/.buildx-cache-api,mode=max
          target: prod

  build-and-push-frontend:
    runs-on: ubuntu-latest
    needs: generate-tag
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ vars.DOCKERHUB_TOKEN }}

      - name: Set up Docker tools
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers for frontend
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache-frontend
          key: frontend-cache-${{ runner.os }}-${{ hashFiles('frontend/Dockerfile', 'frontend/package.json') }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v6
        with:
          context: frontend
          file: frontend/Dockerfile
          push: true
          tags: |
            ankoayfeno/ml_karama:${{ needs.generate-tag.outputs.hex_tag }}
            ankoayfeno/ml_karama:latest
          cache-from: type=local,src=/tmp/.buildx-cache-frontend
          cache-to: type=local,dest=/tmp/.buildx-cache-frontend,mode=max
          target: prod
